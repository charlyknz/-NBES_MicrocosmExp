select(-ID, -death, -comment, -wellplate, -Ansatz) %>%
mutate(ID = paste(SpeciesName, temperature, nut, rep, Sample, sep = ' ')) %>%
rename(species = SpeciesName)
TPC_Master <- rbind(TPC_Masters_ID, TPC_Masters_ID2) %>%
filter(!species %in% c('Mix', 'pulse'))
#merge all data
tbl<-left_join(AllSamplingsCombined, TPC_Master, by = c('nut', 'temperature', 'rep', 'species')) %>%
mutate(treatment_ID = paste(species, nut, rep, sep = ' ')) %>%
rename(raw = value)
which(is.na(tbl$sampling_death))
str(tbl)
tbl<-merge(tbl, AllBlanks, by = c('plate', 'treatment_ID', 'temperature', 'wavelength1')) %>%
mutate(value = raw-Blank) %>%
mutate(sampling_death = as.numeric(sampling_death)) %>%
drop_na(sampling_death) %>%
select(-"...1")%>%
distinct(treatment_ID, temperature, wavelength1, method, fileName,ID,  sampling, species, nut, rep,value,sampling_death )
#### Calculation of growthrates ####
data0 <- tbl %>%
filter(wavelength1 == 440 & nut == 'HI'& species %in% c('DityCux', 'ThalaCux', 'Asterio2', 'Rhizo', 'Guido')) %>%
filter(value >0 & value <1) %>%
mutate(sampling = as.numeric(paste(ifelse(species == 'Asterio2', sampling-6, sampling))))
str(data0)
data0 %>%
filter(species == 'Rhizo') %>%
ggplot(.,aes(x =sampling, y = value))+
geom_point()+
facet_wrap(~temperature, scale = 'free_y')+
theme_bw()
data<-data0%>%
group_by(ID)%>%
arrange(ID, sampling)%>%
filter(sampling < sampling_death-5)%>%
filter(n()>4)%>%
do(model=fit_easylinear(.$sampling,.$value))%>%   #growth rate model
mutate(r=summary(model)$coefficient[2,1],
pvalue=summary(model)$coefficient[2,4])%>%  #gives you the slope (r) and pvalue
mutate(id = ID) %>%
separate(ID, into = c('species', 'temp', 'nut', 'rep', 'sample'), sep = ' ') %>%
select(-model, -nut)
#remove outliers
Asterio <- subset(data,  species == 'Asterio2') %>%
filter(r>0 & r<0.81)
data_subset <- data %>%
filter(species != 'Asterio2') %>%
filter(r>0 & r < 0.6) %>%
bind_rows(., Asterio) %>%
mutate(temp = as.numeric(temp)) %>%
arrange(species, temp)
View(data_subset)
data<-data0%>%
group_by(ID)%>%
arrange(ID, sampling)%>%
filter(sampling < sampling_death-5)%>%
filter(n()>4)%>%
do(model=fit_easylinear(.$sampling,.$value))%>%   #growth rate model
mutate(r=summary(model)$coefficient[2,1],
pvalue=summary(model)$coefficient[2,4])%>%  #gives you the slope (r) and pvalue
mutate(id = ID) %>%
separate(ID, into = c('species', 'temp', 'nut', 'rep', 'sample'), sep = ' ')
#remove outliers
Asterio <- subset(data,  species == 'Asterio2') %>%
filter(r>0 & r<0.81)
data_subset <- data %>%
filter(species != 'Asterio2') %>%
filter(r>0 & r < 0.6) %>%
bind_rows(., Asterio) %>%
mutate(temp = as.numeric(temp)) %>%
arrange(species, temp)
#save linar growth rates
saveRDS(data_subset, file = 'LinearGrowthData.RDS')
data_subset %>%
ggplot(., aes(x = temp, y = r, color = nut))+
geom_point()+
geom_smooth()+
facet_grid(~species)
data0 <- tbl %>%
filter(wavelength1 == 440 & nut == 'LOW'& species %in% c('DityCux', 'ThalaCux', 'Asterio2', 'Rhizo', 'Guido')) %>%
filter(value >0 & value <1) %>%
mutate(sampling = as.numeric(paste(ifelse(species == 'Asterio2', sampling-6, sampling))))
str(data0)
data0 %>%
filter(species == 'Rhizo') %>%
ggplot(.,aes(x =sampling, y = value))+
geom_point()+
facet_wrap(~temperature, scale = 'free_y')+
theme_bw()
data<-data0%>%
group_by(ID)%>%
arrange(ID, sampling)%>%
filter(sampling < sampling_death-5)%>%
filter(n()>4)%>%
do(model=fit_easylinear(.$sampling,.$value))%>%   #growth rate model
mutate(r=summary(model)$coefficient[2,1],
pvalue=summary(model)$coefficient[2,4])%>%  #gives you the slope (r) and pvalue
mutate(id = ID) %>%
separate(ID, into = c('species', 'temp', 'nut', 'rep', 'sample'), sep = ' ')
data0 <- tbl %>%
filter(wavelength1 == 440 & nut == 'LOW'& species %in% c('DityCux', 'ThalaCux', 'Asterio2', 'Rhizo', 'Guido')) %>%
filter(value >0 & value <1) %>%
mutate(sampling = as.numeric(paste(ifelse(species == 'Asterio2', sampling-6, sampling))))
str(data0)
##Arbeitsverzeichnis setzen (die folgende Zeile setzt das Arbeitsverzeichnis an den Ort des R-Skriptes)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
#### import all data ####
AllSamplingsCombined <- read_delim("AllSamplingsDistinct.csv",
";", escape_double = FALSE, locale = locale(decimal_mark = ","), trim_ws = TRUE)#%>%
#select(-X1)
AllBlanks <- read_csv("AllBlanks.csv") %>%
filter(treatment_ID != 'MQ') %>%
select(treatment_ID, value, temperature, plate, wavelength1) %>%
rename(Blank = value)
TPC_Masters_ID <- read_excel("~/Desktop/phD/Experiments/CharlyTPC2021/DataForAnalysis/TPC_Masters_ID.xlsx") %>%
select(-death, -comment)
TPC_Masters_ID2 <- read_excel("~/Desktop/phD/Experiments/CharlyTPC2021/DataForAnalysis/TPC_Masters_ID.xlsx", sheet = "TPC_2NEW") %>%
select(-ID, -death, -comment, -wellplate, -Ansatz) %>%
mutate(ID = paste(SpeciesName, temperature, nut, rep, Sample, sep = ' ')) %>%
rename(species = SpeciesName)
TPC_Master <- rbind(TPC_Masters_ID, TPC_Masters_ID2) %>%
filter(!species %in% c('Mix', 'pulse'))
#merge all data
tbl<-left_join(AllSamplingsCombined, TPC_Master, by = c('nut', 'temperature', 'rep', 'species')) %>%
mutate(treatment_ID = paste(species, nut, rep, sep = ' ')) %>%
rename(raw = value)
which(is.na(tbl$sampling_death))
str(tbl)
tbl<-merge(tbl, AllBlanks, by = c('plate', 'treatment_ID', 'temperature', 'wavelength1')) %>%
mutate(value = raw-Blank) %>%
mutate(sampling_death = as.numeric(sampling_death)) %>%
drop_na(sampling_death) %>%
select(-"...1")%>%
distinct(treatment_ID, temperature, wavelength1, method, fileName,ID,  sampling, species, nut, rep,value,sampling_death )
View(tbl)
data0 <- tbl %>%
filter(wavelength1 == 440 & nut == 'Low'& species %in% c('DityCux', 'ThalaCux', 'Asterio2', 'Rhizo', 'Guido')) %>%
filter(value >0 & value <1) %>%
mutate(sampling = as.numeric(paste(ifelse(species == 'Asterio2', sampling-6, sampling))))
str(data0)
data0 %>%
filter(species == 'Rhizo') %>%
ggplot(.,aes(x =sampling, y = value))+
geom_point()+
facet_wrap(~temperature, scale = 'free_y')+
theme_bw()
data<-data0%>%
group_by(ID)%>%
arrange(ID, sampling)%>%
filter(sampling < sampling_death-5)%>%
filter(n()>4)%>%
do(model=fit_easylinear(.$sampling,.$value))%>%   #growth rate model
mutate(r=summary(model)$coefficient[2,1],
pvalue=summary(model)$coefficient[2,4])%>%  #gives you the slope (r) and pvalue
mutate(id = ID) %>%
separate(ID, into = c('species', 'temp', 'nut', 'rep', 'sample'), sep = ' ')
data<-data0%>%
group_by(ID)%>%
arrange(ID, sampling)%>%
filter(sampling < sampling_death-5)%>%
filter(n()>4)%>%
do(model=fit_easylinear(.$sampling,.$value))#%>%   #growth rate model
View(data)
data<-data0%>%
group_by(ID)%>%
arrange(ID, sampling)%>%
filter(sampling < sampling_death-5)%>%
filter(n()>4)%>%
do(model=fit_easylinear(.$sampling,.$value))%>%   #growth rate model
mutate(r=summary(model)$coefficient[2,1],
pvalue=summary(model)$coefficient[2,4])%>%  #gives you the slope (r) and pvalue
mutate(id = ID) %>%
separate(ID, into = c('species', 'temp', 'nut', 'rep', 'sample'), sep = ' ')
summary(model)$coefficient[2,4]
## Before running:
# 1. Check your working directory, if not done, please set to the main folder
getwd()
# 2. load package here
library(here)
# Create Biomass Fig. 1 + Fig S2&3
source(here("code/02_NBE_BiomassFigure_supplement.R"))
# Create NBES Fig 2 & 3 + Fig S1
source(here("code/03_NBES_calculation.R"))
# Create temperature curves for supplements
source(here('code/01_NBE_temperature_planktotrons.R'))
# Please run separately by actively open the R script
# within R code ANOVA tables will be stored in output folder
source(here("code/05_NBE_Statistics_Contrasts.R"))
source(here("code/04_NBE_HectorLoreau_NetBiodivEffect.R"))
str(allNetBiodiv)
HectorRaw <- allNetBiodiv
#or
#import as csv
#HectorRaw <- read.csv('Data/NBEonFunctioning.csv') %>%
#  select(-X)
str(HectorRaw)
HectorRaw$combination<-as.factor(HectorRaw$combination)
summary(HectorRaw)
#### NBE on F: ANOVA temp, combination ####
aov1<-aov(NetEffect~temp*combination, HectorRaw)
summary(aov1)
TukeyHSD(aov1)
tab_model(aov1, digits = 2, show.df=T, show.est = T, show.stat =T,show.ci = FALSE, file = here("output/NBEonF_aov.doc"))
ggplot(HectorRaw, aes(y = NetEffect, x = as.factor(temp), fill=as.factor(N)))+
geom_boxplot()
# test for normality
fligner.test(NetEffect~interaction(temp,combination), HectorRaw)
plot(resid(aov1))
hist(resid(aov1))
hist(((HectorRaw$NetEffect)))
qqnorm(HectorRaw$NetEffect)
qqline(HectorRaw$NetEffect)
#### NBE on F: T-Test ####
#test against zero
test2<-t.test(HectorRaw$NetEffect, mu = 0, alternative = "two.sided")
test2
#### NBES - NBE on F: Correlation ####
Corr.data <- netdiv %>%
select(combination, temp, rep, NBE, N) %>%
mutate(N = as.factor(N)) %>%
left_join(.,HectorRaw, by = c('combination', 'temp', 'rep', 'N'))
ggscatter(Corr.data, x = 'NetEffect', y='NBE', add = 'reg.line', cor.coef = T, xlab = 'NBE on Functioning', ylab = 'NBES')
ggsave(plot = last_plot(), file = here('output/Correlation_NBE_NBES.png'))
#### detach sjPlot package ####
detach("package:sjPlot", unload=TRUE)
library(tidyverse)
library(ggpubr)
library(sjPlot)
library(here)
# run R scripts
source(here("code/03_NBES_calculation.R"))
str(d3)
netdiv <-d3%>%
mutate(absNBE = abs(NBE))
## check data
summary(netdiv)
names(netdiv)
# combination as factor for analysis
netdiv$combination<-as.factor(netdiv$combination)
#### NBES: ANOVA temp combination ####
aov1<-aov(NBE~temp*combination, netdiv)
summary(aov1)
tab_model(aov1, digits = 2, show.df=T, show.est = T, show.stat =T,show.ci = FALSE, file = here("output/NBES_aov.doc"))
ggplot(netdiv, aes(y = NBE, x = as.factor(temp), fill=as.factor(N)))+
geom_boxplot()
# test for normality
hist(netdiv$NBE)
qqnorm(netdiv$NBE)
qqline(netdiv$NBE)
#### NBES: T-test ####
#test against zero
test1 <- t.test(netdiv$NBE, mu = 0, alternative = "two.sided")
test1
tab_model(test1, digits = 2, show.df=T, show.est = T, show.stat =T,show.ci = FALSE, file = here("output/NBES_t-test.doc"))
combiEffect <- netdiv %>%
mutate(composition = combination) %>%
mutate(A = ifelse(str_detect(combination, 'A'), 1, 0), # for presence 1 for absence 0
D = ifelse(str_detect(combination, 'D'), 1, 0),
G = ifelse(str_detect(combination, 'G'), 1, 0),
R = ifelse(str_detect(combination, 'R'), 1, 0),
T = ifelse(str_detect(combination, 'T'), 1, 0))
fluct <- combiEffect %>% filter(temp == 'Fluctuation')
aov2<-aov(NBE~A+D+G+R+T, fluct)
summary(aov2)
incfluct <- combiEffect %>% filter(temp == 'IncreaseFluctuation')
aov3<-aov(NBE~A+D+G+R+T, incfluct)
inc <- combiEffect %>% filter(temp == 'Increase')
combiEffect <- netdiv %>%
mutate(composition = combination) %>%
mutate(A = ifelse(str_detect(combination, 'A'), 1, 0), # for presence 1 for absence 0
D = ifelse(str_detect(combination, 'D'), 1, 0),
G = ifelse(str_detect(combination, 'G'), 1, 0),
R = ifelse(str_detect(combination, 'R'), 1, 0),
T = ifelse(str_detect(combination, 'T'), 1, 0))
fluct <- combiEffect %>% filter(temp == 'Fluctuation')
aov2<-aov(NBE~A+D+G+R+T, fluct)
summary(aov2)
incfluct <- combiEffect %>% filter(temp == 'IncreaseFluctuation')
aov3<-aov(NBE~A+D+G+R+T, incfluct)
unique(combiEffect$temp)
incfluct <- combiEffect %>% filter(temp == 'Increase + Fluctuation')
aov3<-aov(NBE~A+D+G+R+T, incfluct)
summary(aov3)
inc <- combiEffect %>% filter(temp == 'Increase')
aov4<-aov(NBE~A+D+G+R+T, inc)
summary(aov4)
netdiv$con1<-NA
netdiv$con1[netdiv$N==2]<- "A"
netdiv$con1[netdiv$N==4]<- "B"
lm1<-aov(NBE~temp*con1, netdiv)
summary(lm1)
TukeyHSD(lm1)
netdiv$con2<-NA
netdiv$con2[netdiv$N==2]<- "A"
netdiv$con2[netdiv$N==5]<- "B"
lm2<-aov(NBE~temp*con2, netdiv)
summary(lm2)
TukeyHSD(lm2)
netdiv$con3<-NA
netdiv$con3[netdiv$N==4]<-"A"
netdiv$con3[netdiv$N==5]<-"B"
lm3<-aov(NBE~temp*con3, netdiv)
summary(lm3)
## load packages
library(tidyverse)
library(readxl)
library(scales)
library(here)
##### import data #####
counting_ID_sampling1 <- read_excel("Data/counting_ID.xlsx",
sheet = "S0") %>%
select(c(1:12)) %>%
mutate(sampling = paste(1))
counting_ID_sampling3 <- read_excel("Data/counting_ID.xlsx",
sheet = "S3") %>%
select(c(1:12))%>%
mutate(sampling = paste(3))
counting_ID_sampling6 <- read_excel("Data/counting_ID.xlsx",
sheet = "S6") %>%
select(c(1:12))%>%
mutate(sampling = paste(6))
counting_ID_sampling9 <- read_excel("Data/counting_ID.xlsx",
sheet = "S9") %>%
select(c(1:12))%>%
mutate(sampling = paste(9))
counting_ID_sampling12 <- read_excel("Data/counting_ID.xlsx",
sheet = "S12") %>%
select(c(1:12))%>%
mutate(sampling = paste(12))
counting_ID_sampling15 <- read_excel("Data/counting_ID.xlsx",
sheet = "S15") %>%
select(c(1:12))%>%
mutate(sampling = paste(15))
str(counting_ID_sampling15)
##### import meta data #####
ID_herma <- read_excel("Data/MetaData_NBES.xlsx",  sheet = "overview") %>%
select(-plate, -V_ml, - magn, -sampling)
ID_herma[ ID_herma == 'Asterio' ] <- 'A'
ID_herma[ ID_herma == 'DityCux' ] <- 'D'
ID_herma[ ID_herma == 'Guido' ] <- 'G'
ID_herma[ ID_herma == 'ThalaCux' ] <- 'T'
ID_herma[ ID_herma == 'Rhizo' ] <- 'R'
names(ID_herma)
names(counting_ID_sampling9)
names(counting_ID_sampling15)
counting_ID_sampling<- rbind(counting_ID_sampling1, counting_ID_sampling3,counting_ID_sampling6,counting_ID_sampling9, counting_ID_sampling12,counting_ID_sampling15)
counting_ID_sampling <-left_join(counting_ID_sampling, ID_herma, by = c('no', 'temp', 'nut', 'rep', 'species'))
##### calculate cells_ml #####
cells_mL_calculation_Utermo_hl_05chamber <- read_excel("Data/cells_mL_calculation_Utermöhl_05chamber.xlsx")
str(cells_mL_calculation_Utermo_hl_05chamber)
data <- left_join(counting_ID_sampling,cells_mL_calculation_Utermo_hl_05chamber, by = c('magn', 'V_ml'))
data <- data %>%
mutate(cells_ml  = counts*At_mm/Afield*GF*V_ml) %>%
mutate(sampling = as.numeric(sampling)) %>%
filter(nut == 'Low')
names(data)
BioVolume_exp22 <- read_excel("Data/BioVolume_exp22.xlsx",sheet = "Sheet1") %>%
rename(speciesID = species) %>%
select(-sampling,-comment, -Ansatz)
names(BioVolume_exp22)
BioVolume_exp22$speciesID[BioVolume_exp22$speciesID == 'Ditylum']<-'DityCux'
BioVolume_exp22$speciesID[BioVolume_exp22$speciesID == 'Thala']<-'ThalaCux'
AllData <- data%>%
merge(., BioVolume_exp22, by = c('speciesID')) %>%
mutate(cellVolume = cells_ml * BV) %>%
mutate(combination = ifelse(species == 'mono',paste(A1, sep = ''), ifelse(species == 'duo', paste(A1, A2, sep = ''),
ifelse(species == 'quattro', paste(A1, A2, A3, A4, sep = ''), paste(A1, A2, A3, A4, A5, sep = '')))))%>%
select(no, speciesID,species, combination, temp, rep, sampling, cellVolume)
summary(AllData)
#### Main Script ####
# Main script for creating plots and perform analysis
## Before running:
# 1. Check your working directory, if not done, please set to the main folder
getwd()
# 2. load package here
library(here)
# 3. create an output folder in the MicrocosmExp22 folder, if you havent retrieved it from Github
#dir.create(here('output')) # all output will be stored here
## Run to create and save plots ##
# Create Biomass Fig. 1 + Fig S2&S3
source(here("code/02_NBE_BiomassFigure_supplement.R"))
# 2. load package here
library(here)
# Create Biomass Fig. 1 + Fig S2&S3
source(here("code/02_NBE_BiomassFigure_supplement.R"))
#### detach sjPlot package ####
detach("package:sjPlot", unload=TRUE)
# Create Biomass Fig. 1 + Fig S2&S3
source(here("code/02_NBE_BiomassFigure_supplement.R"))
# Create NBES Fig 2 & 3 + Fig S1
source(here("code/03_NBES_calculation.R"))
# Create temperature curves for supplements
source(here('code/01_NBE_temperature_planktotrons.R'))
## Before running:
# 1. Check your working directory, if not done, please set to the main folder
getwd()
# 2. load package here
library(here)
# 3. create an output folder in the MicrocosmExp22 folder, if you havent retrieved it from Github
dir.create(here('output')) # all output will be stored here
# Create Biomass Fig. 1 + Fig S2&S3
source(here("code/02_NBE_BiomassFigure_supplement.R"))
# Create NBES Fig 2 & 3 + Fig S1
source(here("code/03_NBES_calculation.R"))
# Create temperature curves for supplements
source(here('code/01_NBE_temperature_planktotrons.R'))
#### Start statistics ####
# 11.07.2023
# Helmut Hillebrand & Charlotte Kunze
library(tidyverse)
library(ggpubr)
library(here)
#### data NBES ####
# run R scripts
source(here("code/03_NBES_calculation.R"))
str(d3)
netdiv <-d3%>%
mutate(absNBE = abs(NBE))
# or import as csv
#netdiv <-  read.csv('Data/NBES.csv')
## check data
summary(netdiv)
names(netdiv)
# combination as factor for analysis
netdiv$combination<-as.factor(netdiv$combination)
#### NBES: ANOVA temp combination ####
aov1<-aov(NBE~temp*combination, netdiv)
summary(aov1)
ggplot(netdiv, aes(y = NBE, x = as.factor(temp), fill=as.factor(N)))+
geom_boxplot()
# test for normality
hist(netdiv$NBE)
qqnorm(netdiv$NBE)
qqline(netdiv$NBE)
#### NBES: T-test ####
#test against zero
test1 <- t.test(netdiv$NBE, mu = 0, alternative = "two.sided")
test1
#### NBES: Presence/absence of species ~NBES ####
# explore the interaction of temperature and species combinations
# analyse if presence absence of species affects NBE
# seperately for each temperature treatment
combiEffect <- netdiv %>%
mutate(composition = combination) %>%
mutate(A = ifelse(str_detect(combination, 'A'), 1, 0), # for presence 1 for absence 0
D = ifelse(str_detect(combination, 'D'), 1, 0),
G = ifelse(str_detect(combination, 'G'), 1, 0),
R = ifelse(str_detect(combination, 'R'), 1, 0),
T = ifelse(str_detect(combination, 'T'), 1, 0))
fluct <- combiEffect %>% filter(temp == 'Fluctuation')
aov2<-aov(NBE~A+D+G+R+T, fluct)
summary(aov2)
incfluct <- combiEffect %>% filter(temp == 'Increase + Fluctuation')
aov3<-aov(NBE~A+D+G+R+T, incfluct)
summary(aov3)
inc <- combiEffect %>% filter(temp == 'Increase')
aov4<-aov(NBE~A+D+G+R+T, inc)
summary(aov4)
#### NBES: Contrasts ####
# contrast 1 (con): 2 versus 4 species
netdiv$con1<-NA
netdiv$con1[netdiv$N==2]<- "A"
netdiv$con1[netdiv$N==4]<- "B"
lm1<-aov(NBE~temp*con1, netdiv)
summary(lm1)
TukeyHSD(lm1)
# contrast 2: 2 versus 5 species
netdiv$con2<-NA
netdiv$con2[netdiv$N==2]<- "A"
netdiv$con2[netdiv$N==5]<- "B"
lm2<-aov(NBE~temp*con2, netdiv)
summary(lm2)
TukeyHSD(lm2)
# contrast 3: 4 versus 5 species
netdiv$con3<-NA
netdiv$con3[netdiv$N==4]<-"A"
netdiv$con3[netdiv$N==5]<-"B"
lm3<-aov(NBE~temp*con3, netdiv)
summary(lm3)
#### data NBE Functioning ####
source(here("code/04_NBE_HectorLoreau_NetBiodivEffect.R"))
str(allNetBiodiv)
HectorRaw <- allNetBiodiv
#or
#import as csv
#HectorRaw <- read.csv('Data/NBEonFunctioning.csv') %>%
#  select(-X)
str(HectorRaw)
HectorRaw$combination<-as.factor(HectorRaw$combination)
summary(HectorRaw)
#### NBE on F: ANOVA temp, combination ####
aov1<-aov(NetEffect~temp*combination, HectorRaw)
summary(aov1)
TukeyHSD(aov1)
ggplot(HectorRaw, aes(y = NetEffect, x = as.factor(temp), fill=as.factor(N)))+
geom_boxplot()
# test for normality
fligner.test(NetEffect~interaction(temp,combination), HectorRaw)
plot(resid(aov1))
hist(resid(aov1))
hist(((HectorRaw$NetEffect)))
qqnorm(HectorRaw$NetEffect)
qqline(HectorRaw$NetEffect)
#### NBE on F: T-Test ####
#test against zero
test2<-t.test(HectorRaw$NetEffect, mu = 0, alternative = "two.sided")
test2
#### NBES - NBE on F: Correlation ####
Corr.data <- netdiv %>%
select(combination, temp, rep, NBE, N) %>%
mutate(N = as.factor(N)) %>%
left_join(.,HectorRaw, by = c('combination', 'temp', 'rep', 'N'))
ggscatter(Corr.data, x = 'NetEffect', y='NBE', add = 'reg.line', cor.coef = T, xlab = 'NBE on Functioning', ylab = 'NBES')
ggsave(plot = last_plot(), file = here('output/Correlation_NBE_NBES.tiff'))
