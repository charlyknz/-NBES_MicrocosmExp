scale_y_continuous(limits = c(-7,8))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR2
RR4 <- MonoData %>%
filter(label == '4 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = 'Observed OEV', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7,7))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR4
RR5 <- MonoData %>%
filter(label == '5 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = '', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7,8))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR5
RR5 <- MonoData %>%
filter(label == '5 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = '', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR5
RR2 <- MonoData %>%
filter(label == '2 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = '', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR2
RR4 <- MonoData %>%
filter(label == '4 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = 'Observed OEV', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR4
RR1 <- MonoData %>%
filter(label == 'Monoculture')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = 'Observed OEV', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR1
RR2 <- MonoData %>%
filter(label == '2 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = '', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR2
RR4 <- MonoData %>%
filter(label == '4 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = 'Observed OEV', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR4
RR5 <- MonoData %>%
filter(label == '5 species')%>%
ggplot(.)+
geom_hline(yintercept = 0, color = 'darkgrey')+
geom_errorbar(aes(x = combination, y = mean,ymin = mean - se, ymax = mean +se, color = temp), width = .3, alpha = .7)+
geom_point(aes(x = combination, y = mean, color = temp, shape = temp),size = 2.5, alpha = .6)+
labs(x = 'Combination', y = '', color = 'Treatment', shape = 'Treatment')+
scale_colour_brewer(palette = "Set1")+
facet_wrap(~label,  ncol =2)+
scale_y_continuous(limits = c(-7.5,7.5))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'right',
legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
RR5
RR1+RR2+RR4+RR5+
plot_layout(widths = c( 3,3), nrow = 2)+ plot_layout(guides = 'collect')+
plot_annotation(tag_levels = "a", tag_prefix = '(',
tag_sep = '', tag_suffix = ')')
ggsave(plot = last_plot(), file = here('output/Fig2_ObservedStab_patchwork.png'),width = 11, height = 8)
# Create temperature curves for supplements
source(here('code/01_NBE_temperature_planktotrons.R'))
#### R script to plot temperature curves ####
### required packages ###
library(tidyverse)
library(readxl)
library(lubridate)
library(hms)
library(here)
#### Import data ####
df <- read_csv("Data/all_temperatures.csv", locale = locale())
str(df)
## data wrangling
temp <- df %>%
mutate(datetime = timestamp) %>%
separate(timestamp, into = c('date', 'time'), sep = ' ') %>%
filter(date > '2022-01-19') %>%
filter(date < '2022-02-18') %>%
mutate(time1 = as.character(time))
# set color palette
tempPalette <- c('black' ,"#E41A1C","#4DAF4A","#377EB8"  ) # temp treatments
# order mesocosms after treatments
dataPlot <- temp%>%
filter( unit %in%c(8,11,2,5)) %>%
mutate(treat = ifelse(unit == 11, 'Constant', ifelse(unit == 2, 'Increase', ifelse(unit == 8, 'Fluctuation', 'Fluctuation + Increase'))))
levels(as.factor(dataPlot$treat))
#temperature plots
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle, color = treat))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in °C)')+
scale_x_datetime(breaks = '7 days')+
scale_color_manual(values = tempPalette)+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='none',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
ggsave(plot = plot, file = here('output/FigS1_Temp_curves_exp22.png'), height = 12, width = 5)
ggscatter(Corr.data, x = 'NetEffect', y='NBE', add = 'reg.line', cor.coef = T, xlab = 'NBE on Functioning', ylab = 'NBES')
#### NBES - NBE on F: Correlation ####
Corr.data <- netdiv %>%
select(combination, temp, rep, NBE, N) %>%
mutate(N = as.factor(N)) %>%
left_join(.,HectorRaw, by = c('combination', 'temp', 'rep', 'N'))
ggscatter(Corr.data, x = 'NetEffect', y='NBE', add = 'reg.line', cor.coef = T, xlab = 'NBE on Functioning', ylab = 'NBES')
ggsave(plot = last_plot(), file = here('output/Correlation_NBE_NBES.png'))
combiEffect <- netdiv %>%
mutate(composition = combination) %>%
mutate(A = ifelse(str_detect(combination, 'A'), 1, 0), # for presence 1 for absence 0
D = ifelse(str_detect(combination, 'D'), 1, 0),
G = ifelse(str_detect(combination, 'G'), 1, 0),
R = ifelse(str_detect(combination, 'R'), 1, 0),
T = ifelse(str_detect(combination, 'T'), 1, 0))
fluct <- combiEffect %>% filter(temp == 'Fluctuation')
aov2<-aov(NBE~A+D+G+R+T, fluct)
summary(aov2)
incfluct <- combiEffect %>% filter(temp == 'IncreaseFluctuation')
aov3<-aov(NBE~A+D+G+R+T, incfluct)
summary(aov3)
inc <- combiEffect %>% filter(temp == 'Increase')
aov4<-aov(NBE~A+D+G+R+T, inc)
summary(aov4)
#### R script to transform counting data for Microcosm Exp 22####
#by Charlotte Kunze 28.03.22
## load packages
library(tidyverse)
library(readxl)
library(scales)
library(here)
#### Biovolume ####
##### import data #####
counting_ID_sampling1 <- read_excel("Data/counting_ID.xlsx",
sheet = "S0") %>%
select(c(1:12)) %>%
mutate(sampling = paste(1))
counting_ID_sampling3 <- read_excel("Data/counting_ID.xlsx",
sheet = "S3") %>%
select(c(1:12))%>%
mutate(sampling = paste(3))
counting_ID_sampling6 <- read_excel("Data/counting_ID.xlsx",
sheet = "S6") %>%
select(c(1:12))%>%
mutate(sampling = paste(6))
counting_ID_sampling9 <- read_excel("Data/counting_ID.xlsx",
sheet = "S9") %>%
select(c(1:12))%>%
mutate(sampling = paste(9))
counting_ID_sampling12 <- read_excel("Data/counting_ID.xlsx",
sheet = "S12") %>%
select(c(1:12))%>%
mutate(sampling = paste(12))
counting_ID_sampling15 <- read_excel("Data/counting_ID.xlsx",
sheet = "S15") %>%
select(c(1:12))%>%
mutate(sampling = paste(15))
str(counting_ID_sampling15)
##### import meta data #####
ID_herma <- read_excel("Data/counting_ID_sampling9.xlsx",  sheet = "overview") %>%
select(-plate, -V_ml, - magn, -sampling)
ID_herma[ ID_herma == 'Asterio' ] <- 'A'
ID_herma[ ID_herma == 'DityCux' ] <- 'D'
ID_herma[ ID_herma == 'Guido' ] <- 'G'
ID_herma[ ID_herma == 'ThalaCux' ] <- 'T'
ID_herma[ ID_herma == 'Rhizo' ] <- 'R'
names(ID_herma)
names(counting_ID_sampling9)
names(counting_ID_sampling15)
counting_ID_sampling<- rbind(counting_ID_sampling1, counting_ID_sampling3,counting_ID_sampling6,counting_ID_sampling9, counting_ID_sampling12,counting_ID_sampling15)
counting_ID_sampling <-left_join(counting_ID_sampling, ID_herma, by = c('no', 'temp', 'nut', 'rep', 'species'))
##### calculate cells_ml #####
cells_mL_calculation_Utermo_hl_05chamber <- read_excel("Data/cells_mL_calculation_Utermöhl_05chamber.xlsx")
str(cells_mL_calculation_Utermo_hl_05chamber)
data <- left_join(counting_ID_sampling,cells_mL_calculation_Utermo_hl_05chamber, by = c('magn', 'V_ml'))
data <- data %>%
mutate(cells_ml  = counts*At_mm/Afield*GF*V_ml) %>%
mutate(sampling = as.numeric(sampling)) %>%
filter(nut == 'Low')
names(data)
##### upload Cell Measurements for BioVolume calculation #####
BioVolume_exp22 <- read_excel("Data/BioVolume_exp22.xlsx",sheet = "Sheet1") %>%
rename(speciesID = species) %>%
select(-sampling,-comment, -Ansatz)
names(BioVolume_exp22)
BioVolume_exp22$speciesID[BioVolume_exp22$speciesID == 'Ditylum']<-'DityCux'
BioVolume_exp22$speciesID[BioVolume_exp22$speciesID == 'Thala']<-'ThalaCux'
AllData <- data%>%
merge(., BioVolume_exp22, by = c('speciesID')) %>%
mutate(cellVolume = cells_ml * BV) %>%
mutate(combination = ifelse(species == 'mono',paste(A1, sep = ''), ifelse(species == 'duo', paste(A1, A2, sep = ''),
ifelse(species == 'quattro', paste(A1, A2, A3, A4, sep = ''), paste(A1, A2, A3, A4, A5, sep = '')))))%>%
select(no, speciesID,species, combination, temp, rep, sampling, cellVolume)
summary(AllData)
### create csv to work with ###
write.csv(AllData, file = here('Data/AllRawData_InclBV.csv'))
#### Temperature data ####
## R Script to gather temperature data
### required packages ###
library(tidyverse)
library(readxl)
library(lubridate)
library(hms)
library(here)
setwd("~/Desktop/Exp22/Temperature_Charly_Planktotrons_2022")
## import excel files using a Loop
directory <-  paste(path='~/Desktop/phD/Exp22/Temperature_Charly_Planktotrons_2022',sep = '') # hier sind meine Daten
#read file (from [here][1])
file.list<- list.files(full.names = TRUE, pattern = "*.xls")
df.list <- lapply(file.list, read_excel)
df <- bind_rows(df.list, .id = "id")
df <- filter(df, !unit %in% c(3, 4,9))
str(df)
#read file (from [here][1])
file.list<- list.files(full.names = TRUE, pattern = "*.xls")
#read file (from [here][1])
file.list<- list.files(full.names = TRUE, pattern = "*.xls", path = '~/Desktop/phD/Exp22/Temperature_Charly_Planktotrons_2022')
df.list <- lapply(file.list, read_excel)
df <- bind_rows(df.list, .id = "id")
df <- filter(df, !unit %in% c(3, 4,9))
str(df)
#### R script to prepare data for analysis with Dome ####
# 02.10.2022
# by Charlotte Kunze
# packages
library(tidyverse)
library(readxl)
library(here)
library(cowplot)
#### create color and shape palettes ####
tempPalette <- c('black',"#E41A1C" ,"#377EB8" ,"#4DAF4A" ) # temp treatments
cbbPalette <- c("#E69F00", "#000000","#0072B2", "#009E73","#CC79A7") #species
shape_values <- c(23,16, 17, 15)
#### import species-specific biomass ####
rawData <- read.csv('Data/AllRawData_InclBV.csv')
summary(rawData)
# calculate mean biomass and transform biovolume in um3 to mm3 per ml
biomass<- rawData%>%
mutate(day = sampling * 2,
day = as.numeric(paste(ifelse(sampling == 1, 1, sampling*2))))%>%
group_by( species,combination, speciesID, temp, day) %>%
mutate(cellV_mm_ml = cellVolume/10^9)%>%
summarise(meanV = mean(cellV_mm_ml, na.rm = T),
sdV = sd(cellV_mm_ml, na.rm = T),
seV = sdV/sqrt(n()))
# change labels for temperature tratments and species
biomass$temp[biomass$temp=='CS'] <- 'Constant'
biomass$temp[biomass$temp=='fluct'] <- 'Fluctuation'
biomass$temp[biomass$temp=='inc'] <- 'Increase'
biomass$temp[biomass$temp=='inc+fluc'] <- 'IncreaseFluctuation'
biomass$speciesID[biomass$speciesID=='Asterio'] <- 'Asterionellopsis'
biomass$speciesID[biomass$speciesID=='DityCux'] <- 'Ditylum'
biomass$speciesID[biomass$speciesID=='Guido'] <- 'Guinardia'
biomass$speciesID[biomass$speciesID=='Rhizo'] <- 'Rhizosolenia'
biomass$speciesID[biomass$speciesID=='ThalaCux'] <- 'Thalassionema'
#### Plots with species-specific responses ####
#Two species
Duoplot <- biomass %>%
filter(species == 'duo') %>%
ggplot(., aes( x = day, y = meanV, color = speciesID, group = speciesID))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~'['~mm^3~'/'~ml~']'), x = 'Time [days]', color = 'Species')+
facet_grid(~combination~temp, scales = 'free')+
scale_colour_manual(values = cbbPalette)+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'bottom',
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=16),
legend.text = element_text(size=14))
Duoplot
ggsave(plot = Duoplot, file = here('output/FigS3_Duo_Biomass.png'), width = 12, height = 12)
#4 species
Quattroplot <- biomass %>%
filter(species == 'quattro') %>%
ggplot(., aes( x = day, y = meanV, color = speciesID, group = speciesID))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~'['~mm^3~'/'~ml~']'), x = 'Time [days]', color = 'Temperature')+
facet_grid(~combination~temp, scales = 'free')+
scale_colour_manual(values = cbbPalette)+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 12,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 12, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'none')
Quattroplot
# 5 species
mixplot <- biomass %>%
filter(!species%in%c('duo','mono', 'quattro') )%>%
ggplot(., aes( x = day, y = meanV, color = speciesID, group = speciesID))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~'['~mm^3~'/'~ml~']'), x = 'Time [days]', color = 'Species')+
facet_grid(~combination~temp, scales = 'free_y')+
scale_colour_manual(values = cbbPalette)+
# scale_x_continuous(limits = c(0,16), breaks = c(1,3,6,9,12,15))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 12,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 12, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'bottom',
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=16),
legend.text = element_text(size=14))
mixplot
plot_grid(Quattroplot, mixplot, ncol = 1, rel_heights = c(7/10, 3/10),labels = c('(a)', '(b)'))
