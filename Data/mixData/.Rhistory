mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'influc']<-'flucinc'
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
unique(blankData$treat)
#zusammenfuegen mit platten info
blankData <- left_join(blankData, expData_noMIX, by = c('column', 'row', 'combination'))
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
#Erstellen eines leeren "Blanko-Objektes", welches spaeter alle Daten speichern soll
blankData <- NULL
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
unique(blankData$treat)
#zusammenfuegen mit platten info
names(blankData)
expData_noMix_mitBlank <- left_join(blankData, expData_noMIX, by = c('column', 'row', 'combination', 'method'))
View(expData_noMix_mitBlank)
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value) %>%
select(-fileName)
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value) %>%
select(-fileName)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#Erstellen eines leeren "Blanko-Objektes", welches spaeter alle Daten speichern soll
blankData <- NULL
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value) %>%
select(-fileName)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
unique(blankData$treat)
#zusammenfuegen mit platten info
names(blankData)
expData_noMix_mitBlank <- left_join(blankData, expData_noMIX, by = c('column', 'row', 'combination', 'method'))
is.na(expData_noMIX$ID)
#Erstellen eines leeren "Blanko-Objektes", welches spaeter alle Daten speichern soll
blankData <- NULL
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','X'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value) %>%
select(-fileName)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
unique(blankData$treat)
#zusammenfuegen mit platten info
names(blankData)
expData_noMix_mitBlank <- left_join(blankData, expData_noMIX, by = c('column', 'row', 'combination', 'method', 'treat'))
#Erstellen eines leeren "Blanko-Objektes", welches spaeter alle Daten speichern soll
blankData <- NULL
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','X'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value) %>%
select(-fileName, -blank)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
unique(blankData$treat)
#zusammenfuegen mit platten info
names(blankData)
#Erstellen eines leeren "Blanko-Objektes", welches spaeter alle Daten speichern soll
blankData <- NULL
for (i in 1:length(files)){
blank <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('treat', 'combination','X'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value) %>%
select(-fileName, -X)
blankData <- rbind(blank, blankData)
}
unique(blankData$treat)
#adjust treatment levels
blankData$treat[blankData$treat == 'incfluc']<-'flucinc'
unique(blankData$treat)
#zusammenfuegen mit platten info
names(blankData)
expData_noMix_mitBlank <- left_join(blankData, expData_noMIX, by = c('column', 'row', 'combination', 'method', 'treat'))
is.na(expData_noMIX$ID)
write.csv2(expData_noMix_mitBlank, file = 'expData_noMix_mitBlank.csv')
mix  <- read_excel("~/Desktop/Exp22/Pipettierschema.xlsx",
sheet = "MIX")%>%
mutate(combination = paste('mix'))
#----------------------------------------------------------------------------------------------------------------#
setwd("~/Desktop/Exp22/Data/mixData")
#Arbeitsverzeichnis setzen (die folgende Zeile setzt das Arbeitsverzeichnis an den Ort des R-Skriptes)
directory <- paste(getwd(),sep = '') # hier sind meine Daten
#read file (from [here][1])
file.list<- list.files(full.names = TRUE, pattern = "*.txt")
#Rausziehen der Dateipfade:
files <- dir(directory, recursive=TRUE, full.names=TRUE, pattern="\\.txt$")
#Erstellen eines leeren "Blanko-Objektes", welches spaeter alle Daten speichern soll
mixData <- NULL
for (i in 1:length(files)){
data1 <- read_table(files[i])  %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(fileName = file.list[i] ) %>%
mutate(dummy = str_remove(fileName, '.txt')) %>%
mutate(dummy = str_remove(dummy, './')) %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
separate(dummy, into = c('combination','sampling'), '_') %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(sampling = str_remove(sampling,'s'),
sampling = as.numeric(sampling)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:'))
mixData <- rbind(data1, mixData)
}
unique(mixData$combination)
#zusammenfuegen mit platten info
expData_MIX <- left_join(mixData, mix, by = c('column', 'row', 'combination'))
is.na(expData_MIX$ID)
MIX_blank <- read_table('~/Desktop/Exp22/Data/mixBlank/MIX_blank.txt') %>%
slice(-c(1:37)) %>%
slice(-c(7:9, 16:18, 25:27,34:36,43:45))%>%
rename(dummy = 'Software Version	3.03.14') %>%
separate(dummy, into = c('row', 'V1','V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'method'), sep = '\t') %>%
mutate(V1 = as.numeric(gsub(',', '.', V1)),
V2 = as.numeric(gsub(',', '.', V2)),
V3 = as.numeric(gsub(',', '.', V3)),
V4 = as.numeric(gsub(',', '.', V4)),
V5 = as.numeric(gsub(',', '.', V5)),
V6 = as.numeric(gsub(',', '.', V6)),
V7 = as.numeric(gsub(',', '.', V7)),
V8 = as.numeric(gsub(',', '.', V8))) %>%
gather(key = column, value = value, c(2:9)) %>%
mutate(method = str_remove(method,'Read 1:'),
method = str_remove(method,'Read 2:')) %>%
rename(blank = value)
MIX_mitBlank <- left_join(expData_MIX, MIX_blank, by = c('method', 'row', 'column'))
#daten zusammenfuehren
All_Exp22 <- bind_rows(expData_MIX, expData_MIX)%>%
filter(ID != 'MQ')
#daten zusammenfuehren
All_Exp22 <- bind_rows(expData_noMix_mitBlank, MIX_mitBlank)%>%
filter(ID != 'MQ')
View(All_Exp22)
unique(All_Exp$combination)
unique(All_Exp22$combination)
write.csv(All_Exp22, file = here('~/Desktop/Exp22/output','allData_wBlankExp22.csv'))
library(readr)
allData_wBlankExp22 <- read_csv("~/Desktop/Exp22/output/allData_wBlankExp22.csv",
locale = locale())
View(allData_wBlankExp22)
#load packages
library(tidyverse)
# import data
allData_wBlankExp22 <- read_csv("~/Desktop/Exp22/output/allData_wBlankExp22.csv",
+     locale = locale())
# import data
allData_wBlankExp22 <- read_csv("~/Desktop/Exp22/output/allData_wBlankExp22.csv",
locale = locale())
exp <- allData_wBlankExp22 %>%
mutate(corrected_value = value - blank)
View(exp)
exp <- allData_wBlankExp22 %>%
select(-fileName) %>%
mutate(corrected_value = value - blank)
#load packages
library(tidyverse)
# import data
allData_wBlankExp22 <- read_csv("~/Desktop/Exp22/output/allData_wBlankExp22.csv",
locale = locale())
exp <- allData_wBlankExp22 %>%
select(-fileName) %>%
mutate(corrected_value = value - blank)
View(exp)
exp <- allData_wBlankExp22 %>%
select(-fileName, -X1) %>%
mutate(corrected_value = value - blank)
exp <- allData_wBlankExp22 %>%
select(-fileName, -X1) %>%
mutate(corrected_value = value - blank) %>%
separate(ID,into = c('algae', 'nut', 'rep'))
OD_exp <- exp %>%
group_by(method, treat, combination, sampling,algae, nut ) %>%
filter(method == '440') %>%
summarise(mean = mean(corrected_value, na.rm = T),
sd = sd(corrected_value, na.rm = T),
se = sd/sqrt(n()))
View(OD_exp)
### RFU only
rfu_exp <- exp %>%
group_by(method, treat, combination, sampling,algae, nut ) %>%
filter(method == '395680') %>%
summarise(mean = mean(corrected_value, na.rm = T),
sd = sd(corrected_value, na.rm = T),
se = sd/sqrt(n()))
ggplot(filter(rfu_exp, combination == 'mono'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(treat~algae)+
theme_bw()
ggplot(filter(rfu_exp, combination == 'mono'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(treat~algae, scales = 'free_y')+
theme_bw()
ggplot(filter(rfu_exp, combination == 'mono'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggplot(filter(rfu_exp, combination == 'mono'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggssave(plot = last_plot(), 'mono_rfu.png')
ggsave(plot = last_plot(), 'mono_rfu.png')
ggplot(filter(rfu_exp, combination == 'duo1'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'duo1_rfu.png')
ggplot(filter(rfu_exp, combination == 'duo1'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggplot(filter(rfu_exp, combination == 'duo2'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'duo2_rfu.png')
ggplot(filter(rfu_exp, combination == 'quattro'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'quattro_rfu.png')
ggplot(filter(rfu_exp, combination == 'mix'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggplot(filter(rfu_exp, combination == 'mix'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
theme_bw()
ggplot(filter(rfu_exp, combination == 'mix'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(~algae, scales = 'free_y')+
theme_bw()
ggplot(filter(rfu_exp, combination == 'mix'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(~treat, scales = 'free_y')+
theme_bw()
ggplot(filter(OD_exp, combination == 'mono'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'mono_OD.png')
ggplot(filter(OD_exp, combination == 'duo1'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'duo1_OD.png')
ggplot(filter(OD_exp, combination == 'duo2'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'duo2_OD.png')
ggplot(filter(OD_exp, combination == 'quattro'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(algae~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'quattro_OD.png')
ggplot(filter(OD_exp, combination == 'mix'), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'mix_OD.png')
ggplot(filter(OD_exp, combination == 'mix' & !sampling %in%c(5,7)), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'mix_OD.png')
ggplot(filter(rfu_exp, combination == 'mix' & !sampling %in%c(5,7)), aes(x = sampling, y = mean, color = nut))+
geom_point()+
geom_line(linetype = 'dashed')+
geom_errorbar(aes(ymin = mean - se, ymax = mean + sd), width = .8)+
facet_grid(~treat, scales = 'free_y')+
theme_bw()
ggsave(plot = last_plot(), 'mix_rfu.png')
