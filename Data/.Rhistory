scale_color_manual(values=cbbPalette)+
facet_wrap(~temp)+
labs(y = 'Absolute Contribution (AUC.RR+-SE)')+
theme_bw()+
theme(legend.position = 'none')+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 6),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(override.aes = list(size = 3)))
RR1
pi1 <- data.plot %>%
filter( species == '5 species') %>%
distinct(species, speciesID,temp, mean.rr, mean.pi, se.rr, se.pi) %>%
ggplot(., aes( x = speciesID, y = mean.pi, fill = speciesID))+
geom_hline(yintercept = 0, col = 'darkgrey')+
geom_errorbar(aes(ymin = mean.pi - se.pi, ymax = mean.pi + se.pi, color = speciesID), width = .2)+
geom_col()+
scale_fill_manual(values=cbbPalette)+
scale_color_manual(values=cbbPalette)+
facet_wrap(~temp)+
labs(y = 'Relative Contribution (AUC.RR+-SE)')+
theme_bw()+
theme(legend.position = 'none')+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 6),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(override.aes = list(size = 3)))
pi1
plot_grid(RR1,pi1, ncol = 1)
pi1 <- data.plot %>%
filter( species == '5 species') %>%
distinct(species, speciesID,temp, mean.rr, mean.pi, se.rr, se.pi) %>%
ggplot(., aes( x = speciesID, y = mean.pi, fill = speciesID))+
geom_hline(yintercept = 0, col = 'darkgrey')+
geom_errorbar(aes(ymin = mean.pi - se.pi, ymax = mean.pi + se.pi, color = speciesID), width = .2)+
geom_col()+
scale_fill_manual(values=cbbPalette)+
scale_color_manual(values=cbbPalette)+
facet_wrap(~temp)+
labs(y = 'Relative Contribution (AUC.RR+-SE)', x = ' ')+
theme_bw()+
theme(legend.position = 'none')+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 6),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(override.aes = list(size = 3)))
pi1
plot_grid(RR1,pi1, ncol = 1)
plot_grid(pi1,RR1, ncol = 1)
ggsave(plot = last_plot(), file = here('output/AUC_speciesID_mix.png'), width = 10, height = 5)
ggsave(plot = last_plot(), file = here('output/AUC_speciesID_mix.png'), width =8, height =7)
ggsave(plot = last_plot(), file = here('output/AUC_speciesID_mix.png'), width =6, height =5)
pi1 <- data.plot %>%
filter( species == '5 species') %>%
distinct(species, speciesID,temp, mean.rr, mean.pi, se.rr, se.pi) %>%
ggplot(., aes( x = speciesID, y = mean.pi, fill = speciesID))+
geom_hline(yintercept = 0, col = 'darkgrey')+
geom_errorbar(aes(ymin = mean.pi - se.pi, ymax = mean.pi + se.pi, color = speciesID), width = .2)+
geom_col()+
scale_fill_manual(values=cbbPalette)+
scale_color_manual(values=cbbPalette)+
facet_wrap(~temp)+
labs(y = 'Relative Contribution (AUC.RR+-SE)', x = ' ')+
theme_bw()+
theme(legend.position = 'none')+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 6),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(override.aes = list(size = 3)))
ggsave(plot = last_plot(), file = here('output/AUC_speciesID_mix.png'), width =6, height =7)
plot_grid(pi1,RR1, ncol = 1)
ggsave(plot = last_plot(), file = here('output/AUC_speciesID_mix.png'), width =6, height =7)
#### required packages ####
library(tidyverse)
library(readxl)
library(lubridate)
library(hms)
## ------------------------------------------------------------------------------ ##
## ------------------------------------------------------------------------------ ##
#### START ####
df <- read_csv("~/Desktop/Exp22/Temperature_Charly_Planktotrons_2022/all_temperatures.csv",
locale = locale())
str(df)
temp <- df %>%
mutate(datetime = timestamp) %>%
separate(timestamp, into = c('date', 'time'), sep = ' ') %>%
filter(date > '2022-01-19') %>%
filter(date < '2022-02-18') %>%
mutate(time1 = as.character(time))
dev.off()
# order MC after treatments
dataPlot <- temp%>%
filter( unit %in%c(8,11,2,5)) %>%
mutate(treat = ifelse(unit == 11, 'Constant', ifelse(unit == 2, 'Increase', ifelse(unit == 8, 'Fluctuation', 'Fluctuation + Increase'))))
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 2)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '5 days')+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '5 days')+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
ggsave(plot = plot, file = here('MicrocosmExp22/output/FigSTemp_curves_exp22.tiff'), width = 12, height = 3)
library(here)
ggsave(plot = plot, file = here('MicrocosmExp22/output/FigSTemp_curves_exp22.tiff'), width = 12, height = 3)
ggsave(plot = plot, file = here('Desktop/Exp22/MicrocosmExp22/output/FigSTemp_curves_exp22.tiff'), width = 12, height = 3)
ggsave(plot = plot, file = here('Desktop/Exp22/MicrocosmExp22/output/FigSTemp_curves_exp22.png'), width = 12, height = 3)
ggsave(plot = plot, file = here('output/FigSTemp_curves_exp22.png'), width = 12, height = 3)
ggsave(plot = plot, file = here('output/FigSTemp_curves_exp22.png'), height = 12, width = 3)
ggsave(plot = plot, file = here('output/FigSTemp_curves_exp22.png'), height = 12, width = 4)
ggsave(plot = plot, file = here('output/FigSTemp_curves_exp22.png'), height = 12, width = 5)
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
ggsave(plot = plot, file = here('output/FigSTemp_curves_exp22.png'), height = 12, width = 5)
#### required packages ####
library(tidyverse)
library(readxl)
library(lubridate)
library(hms)
library(here)
setwd("~/Desktop/Exp22/Temperature_Charly_Planktotrons_2022")
## ------------------------------------------------------------------------------ ##
## ------------------------------------------------------------------------------ ##
#### START ####
df <- read_csv("~/Desktop/Exp22/Temperature_Charly_Planktotrons_2022/all_temperatures.csv",
locale = locale())
str(df)
temp <- df %>%
mutate(datetime = timestamp) %>%
separate(timestamp, into = c('date', 'time'), sep = ' ') %>%
filter(date > '2022-01-19') %>%
filter(date < '2022-02-18') %>%
mutate(time1 = as.character(time))
dev.off()
# order MC after treatments
dataPlot <- temp%>%
filter( unit %in%c(8,11,2,5)) %>%
mutate(treat = ifelse(unit == 11, 'Constant', ifelse(unit == 2, 'Increase', ifelse(unit == 8, 'Fluctuation', 'Fluctuation + Increase'))))
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
levels(as.factor(dataPlot$treat))
# order MC after treatments
tempPalette <- c('black',"#E41A1C" ,"#377EB8" ,"#4DAF4A" ) # temp treatments
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
scale_color_manual(values = tempPalette)+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle, color = treat))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
scale_color_manual(values = tempPalette)+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
# order MC after treatments
tempPalette <- c('black',"#377EB8"  ,"#4DAF4A","#E41A1C" ) # temp treatments
dataPlot <- temp%>%
filter( unit %in%c(8,11,2,5)) %>%
mutate(treat = ifelse(unit == 11, 'Constant', ifelse(unit == 2, 'Increase', ifelse(unit == 8, 'Fluctuation', 'Fluctuation + Increase'))))
levels(as.factor(dataPlot$treat))
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle, color = treat))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
scale_color_manual(values = tempPalette)+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
# order MC after treatments
tempPalette <- c('black' ,"#E41A1C","#4DAF4A","#377EB8"  ) # temp treatments
dataPlot <- temp%>%
filter( unit %in%c(8,11,2,5)) %>%
mutate(treat = ifelse(unit == 11, 'Constant', ifelse(unit == 2, 'Increase', ifelse(unit == 8, 'Fluctuation', 'Fluctuation + Increase'))))
levels(as.factor(dataPlot$treat))
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle, color = treat))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
scale_color_manual(values = tempPalette)+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='bottom',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
ggsave(plot = plot, file = here('~/Desktop/Exp22/MicrocosmExp22/output/FigSTemp_curves_exp22.png'), height = 12, width = 5)
ggsave(plot = plot, file = here('~/Desktop/Exp22/MicrocosmExp22/output/FigSTemp_curves_exp22.tiff'), height = 12, width = 5)
plot <- ggplot(dataPlot, aes(x = datetime, y = actual_tempmiddle, color = treat))+
geom_line(linewidth = 1.0)+
facet_wrap(~treat,  ncol = 1)+
labs( x = 'Date', y = 'Temperature (in 째C)')+
scale_x_datetime(breaks = '7 days')+
scale_color_manual(values = tempPalette)+
theme_classic()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border= element_rect(colour = "black", fill=NA, size=0.5),
strip.text = element_text(face = 'bold', size = 18),
legend.background = element_blank(),
legend.position  ='none',
legend.key = element_blank())+
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 11,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 11,  colour = "black", angle = 0, hjust = 0.4))
plot
ggsave(plot = plot, file = here('~/Desktop/Exp22/MicrocosmExp22/output/FigSTemp_curves_exp22.tiff'), height = 12, width = 5)
cbbPalette <- c("#E69F00", "#000000","#0072B2", "#009E73","#CC79A7") #species
shape_values <- c(23,16, 17, 15)
#### import species-specific biomass ####
rawData <- read.csv('AllRawData_InclBV.csv')
summary(rawData)
# packages
library(tidyverse)
library(readxl)
library(MESS)
library(here)
library(RColorBrewer)
library(cowplot)
setwd("~/Desktop/Exp22/MicrocosmExp22/Data")
# create color palettes
tempPalette <- c('black',"#E41A1C" ,"#377EB8" ,"#4DAF4A" ) # temp treatments
cbbPalette <- c("#E69F00", "#000000","#0072B2", "#009E73","#CC79A7") #species
shape_values <- c(23,16, 17, 15)
#### import species-specific biomass ####
rawData <- read.csv('AllRawData_InclBV.csv')
summary(rawData)
biomass<- rawData%>%
mutate(day = sampling * 2,
day = as.numeric(paste(ifelse(sampling == 1, 1, sampling*2))))%>%
group_by( species,combination, speciesID, temp, day) %>%
mutate(transV = cellVolume/10^9)%>%
summarise(meanV = mean(transV, na.rm = T),
sdV = sd(transV, na.rm = T),
seV = sdV/sqrt(n()))
biomass$temp[biomass$temp=='CS'] <- 'Constant'
biomass$temp[biomass$temp=='fluct'] <- 'Fluctuation'
biomass$temp[biomass$temp=='inc'] <- 'Increase'
biomass$temp[biomass$temp=='inc+fluc'] <- 'IncreaseFluctuation'
biomass$speciesID[biomass$speciesID=='Asterio'] <- 'Asterionellopsis'
biomass$speciesID[biomass$speciesID=='DityCux'] <- 'Ditylum'
biomass$speciesID[biomass$speciesID=='Guido'] <- 'Guinardia'
biomass$speciesID[biomass$speciesID=='Rhizo'] <- 'Rhizosolenia'
biomass$speciesID[biomass$speciesID=='ThalaCux'] <- 'Thalassionema'
Duoplot <- biomass %>%
filter(species == 'duo') %>%
ggplot(., aes( x = day, y = meanV, color = speciesID, group = speciesID))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~x~10^9~'['~쨉m^3~'/'~ml~']'), x = 'Time [days]', color = 'Species')+
facet_grid(~combination~temp, scales = 'free')+
scale_colour_manual(values = cbbPalette)+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'bottom')
Duoplot
ggsave(plot = Duoplot, file = here('MicrocosmExp22/output/DuoBiomass.png'), width = 12, height = 12)
Quattroplot <- biomass %>%
filter(species == 'quattro') %>%
ggplot(., aes( x = day, y = meanV, color = speciesID, group = speciesID))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~x~10^9~'['~쨉m^3~'/'~ml~']'), x = 'Time [days]', color = 'Temperature')+
facet_grid(~combination~temp, scales = 'free')+
scale_colour_manual(values = cbbPalette)+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 12,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 12, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'none')
Quattroplot
mixplot <- biomass %>%
filter(!species%in%c('duo','mono', 'quattro') )%>%
ggplot(., aes( x = day, y = meanV, color = speciesID, group = speciesID))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~x~10^9~'['~쨉m^3~'/'~ml~']'), x = 'Time [days]', color = 'Species')+
facet_grid(~combination~temp, scales = 'free_y')+
scale_colour_manual(values = cbbPalette)+
# scale_x_continuous(limits = c(0,16), breaks = c(1,3,6,9,12,15))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 12,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 12, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(legend.position = 'bottom')
mixplot
plot_grid(Quattroplot, mixplot, ncol = 1, rel_heights = c(6.5/9, 2.5/9),labels = c('(a)', '(b)'))
Mono <- biomass %>%
filter(species == 'mono') %>%
ggplot(., aes( x = day, y = meanV, color = temp, group = temp, shape = temp))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~BioV~x~10^9~'['~쨉m^3~'/'~ml~']'), x = 'Time [days]', color = 'Temperature', shape =  'Temperature')+
facet_wrap(~speciesID,nrow = 1, scales = 'free_y')+
scale_shape_manual(values = shape_values)+
scale_colour_manual(values = tempPalette)+
# scale_x_continuous(limits = c(0,30), breaks = c(1,3,6,9,12,15))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'italic'),
legend.text = element_text(size = 13), legend.title = element_text(size = 14,  face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
theme(plot.margin = unit(c(0,0,0,0), "cm"))+
theme(legend.position = 'bottomright')
Mono
#### sum of biomass ####
biomass1<- rawData%>%
mutate(day = sampling * 2,
day = as.numeric(paste(ifelse(sampling == 1, 1, sampling*2))))%>%
group_by(species, combination, temp, day) %>%
mutate(transV = cellVolume/10^9)%>%
summarise(meanV = sum(transV, na.rm = T),
sdV = sd(transV, na.rm = T),
seV = sdV/sqrt(n()))
brewer.pal(n = 8, name = "Set1")
biomass1$temp[biomass1$temp=='CS'] <- 'Constant'
biomass1$temp[biomass1$temp=='fluct'] <- 'Fluctuation'
biomass1$temp[biomass1$temp=='inc'] <- 'Increase'
biomass1$temp[biomass1$temp=='inc+fluc'] <- 'IncreaseFluctuation'
### all ###
biomass1$combination <- factor(as.factor(biomass1$combination) ,
levels = c('A','D','G','R','T',
"AD" ,"AG" ,"AR","AT" ,"DG","DR","DT", "GR" , "GT" ,"RT",
"ADGR" ,"ADGT", "ADRT" ,"AGRT", "DGRT" ,"ADGRT"))
biomass1 %>%
ggplot(., aes( x = day, y = meanV, color = temp, group = temp, shape = temp))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~x~10^9~'['~쨉m^3~'/'~ml~']'), x = 'Time [days]', color = 'Temperature', shape =  'Temperature')+
facet_wrap(~combination, ncol = 5, scales = 'free')+
scale_colour_manual(values = tempPalette)+
scale_shape_manual(values = shape_values)+
# scale_x_continuous(limits = c(0,16), breaks = c(1,3,6,9,12,15))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
#theme(plot.margin = unit(c(0,0,0,0), "cm"))+
theme(legend.position = 'bottom')
biomass1 %>%
ggplot(., aes( x = day, y = meanV, color = temp, group = temp, shape = temp))+
geom_line(alpha = 0.8, linetype = 'dashed')+
geom_point(alpha = 0.8)+
geom_errorbar(aes(ymin = meanV-seV, ymax = meanV+seV), width = .8)+
labs(y =  expression(Total~Biovolume~x~10^9~'['~쨉m^3~'/'~ml~']'), x = 'Time [days]', color = 'Temperature', shape =  'Temperature')+
facet_wrap(~combination, ncol = 5, scales = 'free')+
scale_colour_manual(values = tempPalette)+
scale_shape_manual(values = shape_values)+
# scale_x_continuous(limits = c(0,16), breaks = c(1,3,6,9,12,15))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 14,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10,  colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 14, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10,  colour = "black", angle = 0, hjust = 0.4)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 10, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))+
#theme(plot.margin = unit(c(0,0,0,0), "cm"))+
theme(legend.position = 'bottom')
ggsave(plot = last_plot(), file = here('MicrocosmExp22/output/Fig2Biomass.png'), width = 12, height = 15)
ggsave(plot = last_plot(), file = here('MicrocosmExp22/output/Fig2Biomass.png'), width = 15, height = 15)
